import type { StructuredToolInterface } from '@langchain/core/tools';
import type { LangChainAdapter } from '../adapters/langchain_adapter.js';
import type { MCPClient } from '../client.js';
export declare class ServerManager {
    readonly initializedServers: Record<string, boolean>;
    readonly serverTools: Record<string, StructuredToolInterface[]>;
    readonly client: MCPClient;
    readonly adapter: LangChainAdapter;
    activeServer: string | null;
    private overrideManagementTools?;
    constructor(client: MCPClient, adapter: LangChainAdapter, managementTools?: StructuredToolInterface[]);
    setManagementTools(tools: StructuredToolInterface[]): void;
    logState(context: string): void;
    initialize(): void;
    prefetchServerTools(): Promise<void>;
    get tools(): StructuredToolInterface[];
}
//# sourceMappingURL=server_manager.d.ts.map