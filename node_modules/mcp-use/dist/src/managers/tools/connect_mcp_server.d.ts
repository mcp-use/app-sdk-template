import type { ServerManager } from '../server_manager.js';
import type { SchemaOutputT } from './base.js';
import { z } from 'zod';
import { MCPServerTool } from './base.js';
declare const ConnectMCPServerSchema: z.ZodObject<{
    serverName: z.ZodString;
}, "strip", z.ZodTypeAny, {
    serverName: string;
}, {
    serverName: string;
}>;
export declare class ConnectMCPServerTool extends MCPServerTool<typeof ConnectMCPServerSchema> {
    name: string;
    description: string;
    schema: z.ZodObject<{
        serverName: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        serverName: string;
    }, {
        serverName: string;
    }>;
    constructor(manager: ServerManager);
    _call({ serverName }: SchemaOutputT<typeof ConnectMCPServerSchema>): Promise<string>;
}
export {};
//# sourceMappingURL=connect_mcp_server.d.ts.map