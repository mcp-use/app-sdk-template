import type { StructuredToolInterface } from '@langchain/core/tools';
import type { Tool as MCPTool } from '@modelcontextprotocol/sdk/types.js';
import type { BaseConnector } from '../connectors/base.js';
import { BaseAdapter } from './base.js';
export declare class LangChainAdapter extends BaseAdapter<StructuredToolInterface> {
    constructor(disallowedTools?: string[]);
    /**
     * Convert a single MCP tool specification into a LangChainJS structured tool.
     */
    protected convertTool(mcpTool: MCPTool, connector: BaseConnector): StructuredToolInterface | null;
}
//# sourceMappingURL=langchain_adapter.d.ts.map