import type { SSEClientTransportOptions } from '@modelcontextprotocol/sdk/client/sse.js';
import { SSEClientTransport } from '@modelcontextprotocol/sdk/client/sse.js';
import { ConnectionManager } from './base.js';
export declare class SseConnectionManager extends ConnectionManager<SSEClientTransport> {
    private readonly url;
    private readonly opts?;
    private _transport;
    /**
     * Create an SSE connection manager.
     *
     * @param url  The SSE endpoint URL.
     * @param opts Optional transport options (auth, headers, etc.).
     */
    constructor(url: string | URL, opts?: SSEClientTransportOptions);
    /**
     * Spawn a new `SSEClientTransport` and start the connection.
     */
    protected establishConnection(): Promise<SSEClientTransport>;
    /**
     * Close the underlying transport and clean up resources.
     */
    protected closeConnection(_connection: SSEClientTransport): Promise<void>;
}
//# sourceMappingURL=sse.d.ts.map