/**
 * Remote agent implementation for executing agents via API.
 */
import type { BaseMessage } from '@langchain/core/messages';
import type { ZodSchema } from 'zod';
export declare class RemoteAgent {
    private agentId;
    private apiKey;
    private baseUrl;
    private chatId;
    constructor(options: {
        agentId: string;
        apiKey?: string;
        baseUrl?: string;
    });
    private pydanticToJsonSchema;
    private parseStructuredResponse;
    private createChatSession;
    run<T = string>(query: string, maxSteps?: number, manageConnector?: boolean, externalHistory?: BaseMessage[], outputSchema?: ZodSchema<T>): Promise<T>;
    stream<T = string>(query: string, maxSteps?: number, manageConnector?: boolean, externalHistory?: BaseMessage[], outputSchema?: ZodSchema<T>): AsyncGenerator<any, T, void>;
    close(): Promise<void>;
}
//# sourceMappingURL=remote.d.ts.map